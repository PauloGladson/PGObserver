insert into dashboard (version,slug,title,org_id,created,updated,data)
values (0,'documentation','Documentation',1,CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
'{"annotations":{"list":[]},"editable":true,"hideControls":false,"id":4,"links":[],"nav":[{"collapse":false,"enable":true,"notice":false,"now":true,"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"status":"Stable","time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"],"type":"timepicker"}],"originalTitle":"docu","rows":[{"collapse":false,"editable":true,"height":"250px","panels":[{"content":"Available data series\n---\n\n* `avg_query_runtime.{ui_shortname}` - data is based on  [pg\\_stat\\_statenents](http://www.postgresql.org/docs/9.4/static/pgstatstatements.html)\n* `avg_sproc_runtime.{ui_shortname}` - data is based on [pg\\_stat\\_user_functions](http://www.postgresql.org/docs/current/static/monitoring-stats.html#PG-STAT-USER-FUNCTIONS-VIEW)\n* `avg_sproc_runtime_schema.{ui_shortname}.{schema}` - previous view broken down to individual schemas. for nice overview use  /avg\\_sproc\\_runtime_schema\\\\\\.$db\\\\\\.\\.*/\n* `blocked_process_counts.{ui_shortname}` - at time of sampling\n* `db_general.{ui_shortname}` - counts of rollbacks, deadlocks, temp. files, read/write ratios, etc\n* `db_size.{ui_shortname}` - total size + splitted to index and data size\n* `load.{ui_shortname}` - CPU load + WAL at time of sampling\n* `scan_and_iud_rates.{ui_shortname}` - Table and index scan and Insert, Update, Delete counts per DB\n* `scan_and_iud_rates_schema.{ui_shortname}` - Table and index scans and IUD counts per schema\n* `sproc_details.{ui_shortname}.{schema}.{sproc}` - Detailed info on individual sprocs\n* `table_and_index_sizes.{ui_shortname}.{schema}` - Table and index sizes on schema level\n* `table_details.{ui_shortname}.{schema}.{table}` - Table and index scans and IUD counts on table (NB! for table IO and single index details on needs to visit PgObserver still)\n\n\nColumns available for single views\n---\nSQL queries selecting data from PgObserver PostgreSQL DB can be found [here](https://github.com/zalando/PGObserver/tree/master/extra_features/influxdb_adapter/data_collection_queries)\n\nHelp with Grafana\n---\n* [http://grafana.org/features/](http://grafana.org/features/)\n* [http://docs.grafana.org/](http://docs.grafana.org/)","editable":true,"error":false,"id":1,"links":[],"mode":"markdown","span":12,"style":{"font-size":"12pt"},"title":"docu","transparent":true,"type":"text"}],"title":"Row"}],"schemaVersion":6,"sharedCrosshair":false,"style":"dark","tags":[],"templating":{"list":[]},"time":{"from":"now-6h","to":"now"},"timezone":"browser","title":"docu","version":1}');